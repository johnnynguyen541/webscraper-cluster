---
Description: >
  AWS CloudFormation script that creates Jumpbox Server

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: webscraper-cluster

  JumpboxKey: 
    Description: Key for Private EC2 Instance
    Type: String
    Default: jonnypottie-jumpbox
  
  AmiID:
    Description: AMI ID of EC2 Instances (Ubuntu)
    Type: AWS::EC2::Image::Id
    Default: ami-0892d3c7ee96c0bf7

  EC2ServerType:
    Description: Autoscale EC2 Instance Type
    Type: String
    Default: t2.micro

  ID:
    Description: Unique identifier.
    Type: String
    Default: Default

  # In Addition, the Following Exports are used from aws-network.yml
  # - VPC:                    ${EnvironmentName}-vpc
  # - PublicSubnets:          ${EnvironmentName}-pubnets
  # - PrivateSubnets:         ${EnvironmentName}-prinets
  # - PublicSubnet1:          ${EnvironmentName}-pubnet1
  # - PublicSubnet2:          ${EnvironmentName}-pubnet2
  # - PrivateSubnet1:         ${EnvironmentName}-prinet1
  # - PrivateSubnet2:         ${EnvironmentName}-prinet2
  # - VPCPublicRouteTable:    ${EnvironmentName}-pubrt
  # - VPCPrivateRouteTable1:  ${EnvironmentName}-prirt1
  # - VPCPrivateRouteTable2:  ${EnvironmentName}-prirt2

Resources:
  # IAM
  # - Role: allow EC2 Session Manager Access
  RoleForSSMAccess: 
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  # - Instance Profile
  ServerInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Roles: 
        - !Ref RoleForSSMAccess

  # Security Groups
  # SecGroup - Jumpbox
  JumpboxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Jumpbox SG, Inbound TCP port 22 (SSH), unrestricted outbound
      GroupName: !Sub ${EnvironmentName}-jumpbox-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-vpc"
      Tags: 
        - Key: "Name"
          Value: !Sub ${EnvironmentName}-jumpbox-sg
  
  # SecGroup - Webservers in AutoScaling Group
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH to WebServers, all traffic outbound
      GroupName: !Sub ${EnvironmentName}-ec2-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-vpc"
      Tags: 
        - Key: "Name"
          Value: !Sub ${EnvironmentName}-ec2-sg

  # SecGroup - Load Balancer/Webservers
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group to allow HTTP to our load balancer
      GroupName: !Sub ${EnvironmentName}-alb-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-vpc"
      Tags: 
        - Key: "Name"
          Value: !Sub ${EnvironmentName}-alb-sg

Outputs: 
  RoleForSSMAccess:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref RoleForSSMAccess
    Export:
      Name: !Sub ${EnvironmentName}-iam-role
  
  ServerInstanceProfile:
    Description: IAM Instance Profile
    Value: !Ref ServerInstanceProfile
    Export:
      Name: !Sub ${EnvironmentName}-iam-profile
  
  JumpboxSecurityGroup:
    Description: Jumpbox Security Group
    Value: !Ref JumpboxSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-jumpbox-sg
  
  WebServerSecGroup:
    Description: Web Scraper Security Group
    Value: !Ref WebServerSecGroup
    Export:
      Name: !Sub ${EnvironmentName}-ec2-sg
  
  LBSecGroup:
    Description: Security Group to allow HTTP to our load balancer
    Value: !Ref LBSecGroup
    Export:
      Name: !Sub ${EnvironmentName}-alb-sg
...