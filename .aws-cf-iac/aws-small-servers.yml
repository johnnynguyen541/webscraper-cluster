---
AWSTemplateFormatVersion: 2010-09-09

Description: >
  AWS CloudFormation script that creates Web Servers.  This includes:
   - IAM Roles
   - Auto Scaling Groups

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: webscraper-cluster

  JumpboxKey: 
    Description: Key for Private EC2 Instance
    Type: String
    Default: jonnypottie-jumpbox
  
  AmiID:
    Description: AMI ID of EC2 Instances (Ubuntu)
    Type: AWS::EC2::Image::Id
    Default: ami-0892d3c7ee96c0bf7

  EC2ServerType:
    Description: Autoscale EC2 Instance Type
    Type: String
    Default: t2.micro

  ID:
    Description: Unique identifier.
    Type: String
    Default: Default

  # In Addition, the Following Exports are used from aws-network.yml
  # - VPC:                    ${EnvironmentName}-vpc
  # - PublicSubnets:          ${EnvironmentName}-pubnets
  # - PrivateSubnets:         ${EnvironmentName}-prinets
  # - PublicSubnet1:          ${EnvironmentName}-pubnet1
  # - PublicSubnet2:          ${EnvironmentName}-pubnet2
  # - PrivateSubnet1:         ${EnvironmentName}-prinet1
  # - PrivateSubnet2:         ${EnvironmentName}-prinet2
  # - VPCPublicRouteTable:    ${EnvironmentName}-pubrt
  # - VPCPrivateRouteTable1:  ${EnvironmentName}-prirt1
  # - VPCPrivateRouteTable2:  ${EnvironmentName}-prirt2

Resources:
  # AutoScaling
  # AS - Launch Config for EC2 instances
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref AmiID
      IamInstanceProfile:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-iam-profile
      KeyName: !Ref JumpboxKey
      SecurityGroups:
        - Fn::ImportValue:
            !Sub ${EnvironmentName}-ec2-sg
      InstanceType: !Ref EC2ServerType
      UserData:
        Fn::Base64: |
          #!/bin/bash
          apt update -y
          apt -y install awscli
          apt -y install ansible

  # AS - Autoscaling Group
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: 
            !Sub "${EnvironmentName}-pubnets"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '1'
      MaxSize: '1'
      TargetGroupARNs:
        - Ref: WebAppTargetGroup
      Tags:
        - Key: "Name"
          Value: !Sub ${EnvironmentName}-webserver-ec2-${ID}
          PropagateAtLaunch: true

  # Load Balancer
  # LB - Target Group
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-vpc"

Outputs: 
  WebAppTargetGroupARN: 
    Description: ARN for Target Group
    Value: !Ref WebAppTargetGroup
    Export:
      Name: !Sub ${EnvironmentName}-asg-tg-${ID}
...